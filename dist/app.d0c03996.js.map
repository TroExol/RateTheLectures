{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","scripts/config.js","scripts/firebase.js","scripts/Lecture.js","scripts/Preloader.js","scripts/app.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","Lecture","id","userId","scores","groupBy","array","key","reduce","acc","element","push","collection","where","get","docs","map","score","data","dirtScores","undefined","selectedScoresByUser","filter","scoreGroups","value","doc","count","length","selected","some","scoreId","Object","entries","name","add","lectureId","Preloader","selectorBlock","blockName","block","document","createElement","classList","dataset","hidonerror","style","display","innerHTML","$parentBlock","querySelector","position","insertAdjacentElement","isActive","querySelectorAll","forEach","opacity","lecturePreloader","show","showError","showMessage","getUserId","setUserId","loadStatistics","lecture","getScores","allScores","hide","sort","score1","score2","lectureScores","selectedScoreByUser","find","countScores","sum","$scoreElement","setAttribute","title","textContent","iconClass","addEventListener","event","target","user","addScore","$statisticElement","$statisticIconElement","$statisticProgressElement","lectureScore","countPercent","toFixed","String","background","border","cookie","match","RegExp","message","$messageBlock","location","pathname","split","slice","toLowerCase","getName","lectureName","isStatisticsLoaded"],"mappings":"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","file":"app.d0c03996.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\r\n * Конфиг подключения к Firebase\r\n *\r\n * @type {{storageBucket: string, apiKey: string, messagingSenderId: string, appId: string, projectId: string, authDomain: string}}\r\n */\r\nexport const firebaseConfig = {\r\n\tapiKey: \"AIzaSyDseEhE5P5jGvqrhJGDuljd8dZATEdY_78\",\r\n\tauthDomain: \"ratethelectures.firebaseapp.com\",\r\n\tprojectId: \"ratethelectures\",\r\n\tstorageBucket: \"ratethelectures.appspot.com\",\r\n\tmessagingSenderId: \"418107099511\",\r\n\tappId: \"1:418107099511:web:0d780f73aec17c7cf4f972\"\r\n};\r\n","import {firebaseConfig} from './config';\r\n\r\n// Инициализация Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.firestore();\r\n","import './types';\r\nimport {db} from './firebase';\r\n\r\n/**\r\n * Класс лекции\r\n */\r\nexport default class Lecture\r\n{\r\n\t/**\r\n\t * Название лекции\r\n\t *\r\n\t * @private\r\n\t * @type {string}\r\n\t */\r\n\t#name;\r\n\r\n\t/**\r\n\t * Создание экземпляра лекции\r\n\t *\r\n\t * @constructor\r\n\t * @param {string} id - Идентификатор лекции\r\n\t * @return {LectureType} - Лекция\r\n\t */\r\n\tconstructor(id)\r\n\t{\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\t/**\r\n\t * Получение оценок\r\n\t *\r\n\t * @param {string} userId - ID пользователя\r\n\t * @returns {Promise<ScoreType[] | undefined>}\r\n\t */\r\n\tasync getScores(userId)\r\n\t{\r\n\t\tconst scores = [];\r\n\r\n\t\t/**\r\n\t\t * Группировка по ключу\r\n\t\t *\r\n\t\t * @param {{}[]} array - Массив объектов\r\n\t\t * @param {string} key - Ключ для группировки\r\n\t\t */\r\n\t\tconst groupBy = (array, key) => array.reduce((acc, element) =>\r\n\t\t{\r\n\t\t\t(acc[element[key]] = acc[element[key]] || []).push(element);\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\t/**\r\n\t\t * Все оценки по лекции\r\n\t\t *\r\n\t\t * @type {{scoreId: string, userId: string, lectureId: string}[]}\r\n\t\t */\r\n\t\tconst dirtScores = (await db.collection('LectureScore').where('lectureId', '==', this.id)\r\n\t\t.get())?.docs?.map(score => score.data());\r\n\r\n\t\t// Если не удалось получить данные об оценке\r\n\t\tif (dirtScores == null)\r\n\t\t{\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Выбранные пользователем оценки\r\n\t\t *\r\n\t\t * @type {{scoreId: string, userId: string, lectureId: string}[]}\r\n\t\t */\r\n\t\tconst selectedScoresByUser = dirtScores.filter(score => score.userId === userId);\r\n\r\n\t\t/**\r\n\t\t * Сгруппированные оценки по id\r\n\t\t */\r\n\t\tconst scoreGroups = groupBy(dirtScores, 'scoreId');\r\n\r\n\t\t/**\r\n\t\t * Оценки по лекции\r\n\t\t *\r\n\t\t * @type {ScoreType[]}\r\n\t\t */\r\n\t\tfor(const [key, value] of Object.entries(scoreGroups))\r\n\t\t{\r\n\t\t\tconst score = (await db.collection('Score').doc(key).get())?.data();\r\n\r\n\t\t\t// Если не удалось получить данные об оценке\r\n\t\t\tif (score == null)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tscores.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tvalue: score.value,\r\n\t\t\t\tcount: value.length,\r\n\t\t\t\tselected: selectedScoresByUser.some(score => score?.scoreId === key),\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn scores;\r\n\t}\r\n\r\n\t/**\r\n\t * Получение названия лекции\r\n\t *\r\n\t * @returns {Promise<string|undefined>}\r\n\t */\r\n\tasync getName()\r\n\t{\r\n\t\t// Если название лекции еще не запрашивали\r\n\t\tif (!this.#name)\r\n\t\t{\r\n\t\t\tthis.#name = (await db.collection('Lecture').doc(this.id).get()).data()?.name;\r\n\t\t}\r\n\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/**\r\n\t * Добавление оценки в БД\r\n\t *\r\n\t * @param {string} scoreId - ID оценки\r\n\t * @param {string} userId - ID пользователя\r\n\t * @returns {Promise<boolean>} - Добавлена запись\r\n\t */\r\n\tasync addScore(scoreId, userId)\r\n\t{\r\n\t\treturn !!(await db.collection('LectureScore').add({lectureId: this.id, scoreId, userId}))?.id;\r\n\t}\r\n\r\n\t/**\r\n\t * Получение всех видов оценок\r\n\t *\r\n\t * @return {Promise<{id: string, iconClass: string, title: string, value: number}[]|undefined>}\r\n\t */\r\n\tstatic async getScores()\r\n\t{\r\n\t\treturn (await db.collection('Score').get())?.docs?.map(score =>\r\n\t\t{\r\n\t\t\tconst data = score.data();\r\n\t\t\tdata.id = score.id;\r\n\t\t\treturn data;\r\n\t\t});\r\n\t}\r\n}\r\n","export default class Preloader\r\n{\r\n\t/**\r\n\t * Название предназначенного блока\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tblock;\r\n\r\n\t/**\r\n\t * Элемент прелоадера\r\n\t *\r\n\t * @type {HTMLDivElement}\r\n\t */\r\n\telement;\r\n\r\n\t/**\r\n\t * Создание экземпляра прелоадера\r\n\t *\r\n\t * @param {string} selectorBlock - Селектор предназначенного блока\r\n\t * @param {string} blockName - Название предназначенного блока\r\n\t */\r\n\tconstructor(selectorBlock, blockName)\r\n\t{\r\n\t\tthis.block = blockName;\r\n\r\n\t\t// Создание прелоадера\r\n\t\tthis.element = document.createElement('div');\r\n\t\tthis.element.classList.add('preloader');\r\n\t\tthis.element.dataset.block = blockName;\r\n\t\tthis.element.dataset.hidonerror = 'true';\r\n\t\tthis.element.style.display = 'none';\r\n\t\tthis.element.innerHTML = `\r\n\t\t<span>↓</span>\r\n\t\t<span style=\"--delay: 0.1s\">↓</span>\r\n\t\t<span style=\"--delay: 0.3s\">↓</span>\r\n\t\t<span style=\"--delay: 0.4s\">↓</span>\r\n\t\t<span style=\"--delay: 0.5s\">↓</span>\r\n\t\t`;\r\n\r\n\t\tconst $parentBlock = document.querySelector(selectorBlock);\r\n\t\t$parentBlock.style.position = 'relative';\r\n\t\t$parentBlock.insertAdjacentElement('beforeend', this.element);\r\n\t}\r\n\r\n\t/**\r\n\t * Включен ли прелоадер\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isActive()\r\n\t{\r\n\t\treturn this.element.style.display !== 'none';\r\n\t}\r\n\r\n\tshow()\r\n\t{\r\n\t\tif (!this.isActive)\r\n\t\t{\r\n\t\t\tdocument.querySelectorAll(`[data-preload=\"true\"][data-block=\"${this.block}\"]`)\r\n\t\t\t.forEach(element => element.style.opacity = '0');\r\n\t\t\tthis.element.style.display = 'flex';\r\n\t\t}\r\n\t}\r\n\r\n\thide()\r\n\t{\r\n\t\tif (this.isActive)\r\n\t\t{\r\n\t\t\tdocument.querySelectorAll(`[data-preload=\"true\"][data-block=\"${this.block}\"]`)\r\n\t\t\t.forEach(element => element.style.opacity = '1');\r\n\t\t\tthis.element.style.display = 'none';\r\n\t\t}\r\n\t}\r\n}\r\n","import 'regenerator-runtime/runtime';\r\nimport './../styles/lecture.scss';\r\nimport {db} from './firebase';\r\nimport Lecture from './Lecture';\r\nimport Preloader from './Preloader';\r\n\r\n/**\r\n * Прелоадер для блока лекции\r\n *\r\n * @type {Preloader}\r\n */\r\nconst lecturePreloader = new Preloader('.lecture', 'lecture');\r\n// Показать прелоадер пока идет загрузка страницы\r\nlecturePreloader.show();\r\n\r\n(async function()\r\n{\r\n\t/**\r\n\t * ID лекции\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tconst lectureId = location.pathname.split('/').slice(-2, -1)[0].toLowerCase();\r\n\r\n\t/**\r\n\t * Лекция для оценивания\r\n\t *\r\n\t * @type {Lecture}\r\n\t */\r\n\tconst lecture = new Lecture(lectureId);\r\n\r\n\t/**\r\n\t * Название лекции\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tconst lectureName = await lecture.getName();\r\n\r\n\t// Если такой лекции не существует\r\n\tif (lectureName == null)\r\n\t{\r\n\t\tshowError('<p>Лекция указана неправильно</p><p>Проверьте название лекции</p>');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Добавляем название лекции\r\n\tdocument.querySelector('.lecture-header').textContent = lectureName;\r\n\r\n\t/**\r\n\t * Загрузилась ли статистика\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tconst isStatisticsLoaded = await loadStatistics(lecture);\r\n\r\n\tif (!isStatisticsLoaded)\r\n\t{\r\n\t\tshowError('<p>Не удалось загрузить оценки</p><p>Попробуйте обновить страницу</p>');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Скрыть прелоадер после загрузки страницы\r\n\tlecturePreloader.hide();\r\n\r\n\r\n\t/*------ Функции ------*/\r\n\r\n\t/**\r\n\t * Показать ошибку\r\n\t *\r\n\t * @param {string} message - Сообщение об ошибке (может быть в формате HTML)\r\n\t */\r\n\tfunction showError(message)\r\n\t{\r\n\t\t// Скрыть все, что указано при ошибке\r\n\t\tdocument.querySelectorAll('[data-hidonerror=\"true\"]').forEach(element => element.style.display = 'none');\r\n\r\n\t\t/**\r\n\t\t * Блок сообщения\r\n\t\t *\r\n\t\t * @type {HTMLDivElement}\r\n\t\t */\r\n\t\tconst $messageBlock = document.querySelector('.lecture-message');\r\n\t\t$messageBlock.style.display = 'block';\r\n\t\t$messageBlock.innerHTML = message;\r\n\t}\r\n\r\n\t/**\r\n\t * Показать сообщение\r\n\t *\r\n\t * @param {string} message - Сообщение (может быть в формате HTML)\r\n\t */\r\n\tfunction showMessage(message)\r\n\t{\r\n\t\t/**\r\n\t\t * Блок сообщения\r\n\t\t *\r\n\t\t * @type {HTMLDivElement}\r\n\t\t */\r\n\t\tconst $messageBlock = document.querySelector('.lecture-message');\r\n\t\t$messageBlock.style.display = 'block';\r\n\t\t$messageBlock.innerHTML = message;\r\n\t}\r\n\r\n\t/**\r\n\t * Получение ID пользователя из куки\r\n\t *\r\n\t * @returns {string | null}\r\n\t */\r\n\tfunction getUserId()\r\n\t{\r\n\t\tconst match = document.cookie.match(new RegExp('(^| )userId=([^;]+)'));\r\n\t\treturn match && match[2];\r\n\t}\r\n\r\n\t/**\r\n\t * Установка ID пользователя в куки\r\n\t *\r\n\t * @param {string} id - ID пользователя\r\n\t */\r\n\tfunction setUserId(id)\r\n\t{\r\n\t\tdocument.cookie = `userId=${id}; expires=Fri, 31 Dec 2100 23:59:59 GMT`;\r\n\t}\r\n\r\n\t/**\r\n\t * Загрузка статистики на страницу\r\n\t *\r\n\t * @param {Lecture} lecture - Лекция\r\n\t * @returns {Promise<boolean>} - true - успешно, false - с ошибками\r\n\t */\r\n\tasync function loadStatistics(lecture)\r\n\t{\r\n\t\t// Показать прелоадер пока идет загрузка статистики\r\n\t\tlecturePreloader.show();\r\n\r\n\t\tdocument.querySelectorAll('.lecture-statistics-scores, .lecture-rate')\r\n\t\t.forEach(element => element.innerHTML = '');\r\n\r\n\t\t/**\r\n\t\t * Все виды оценок\r\n\t\t *\r\n\t\t * @type {{id: string, iconClass: string, title: string, value: number}[] | undefined}\r\n\t\t */\r\n\t\tconst allScores = await Lecture.getScores();\r\n\r\n\t\t// Если не удалось получить оценки\r\n\t\tif (allScores == null)\r\n\t\t{\r\n\t\t\tlecturePreloader.hide();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Сортировка по убыванию значимости оценки\r\n\t\tallScores.sort((score1, score2) => score2.value - score1.value);\r\n\r\n\t\t/**\r\n\t\t * Оценки лекции\r\n\t\t *\r\n\t\t * @type {ScoreType[] | undefined}\r\n\t\t */\r\n\t\tconst lectureScores = await lecture.getScores(getUserId());\r\n\r\n\t\t// Если не удалось получить оценки лекции\r\n\t\tif (lectureScores == null)\r\n\t\t{\r\n\t\t\tlecturePreloader.hide();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Выбранная пользователем оценка\r\n\t\t *\r\n\t\t * @type {ScoreType | undefined}\r\n\t\t */\r\n\t\tconst selectedScoreByUser = lectureScores.find(score => score.selected);\r\n\r\n\t\t/**\r\n\t\t * Количество всех оценок лекции\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tconst countScores = lectureScores.reduce((sum, score) => sum + score.count, 0);\r\n\r\n\t\tallScores.forEach(score =>\r\n\t\t{\r\n\t\t\t// Если пользователь не выбрал оценку\r\n\t\t\tif (selectedScoreByUser == null)\r\n\t\t\t{\r\n\t\t\t\t// Добавляем оценки\r\n\t\t\t\tconst $scoreElement = document.createElement('span');\r\n\t\t\t\t$scoreElement.classList.add('material-icons', 'lecture-rate-icon');\r\n\t\t\t\t$scoreElement.setAttribute('title', score.title);\r\n\t\t\t\t$scoreElement.dataset.id = score.id;\r\n\t\t\t\t$scoreElement.textContent = score.iconClass;\r\n\t\t\t\t$scoreElement.addEventListener('click', async (event) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Цель нажатия\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @type {HTMLDivElement}\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst target = event.target;\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * ID оценки\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @type {string}\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst scoreId = target.dataset.id;\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * ID пользователя\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @type {string | null}\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst userId = getUserId();\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * ID пользователя\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * @type {string}\r\n\t\t\t\t\t */\r\n\t\t\t\t\tlet user;\r\n\t\t\t\t\tif (userId != null && (await db.collection('User').doc(userId).get())?.data())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuser = userId;\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuser = (await db.collection('User').add({}))?.id;\r\n\t\t\t\t\t\tif (user == null) {\r\n\t\t\t\t\t\t\tshowError('Не удалось добавить пользователя');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetUserId(user);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!(await lecture.addScore(scoreId, user)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tshowError('Не удалось поставить оценку');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait loadStatistics(lecture);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdocument.querySelector('.lecture-rate').insertAdjacentElement('beforeend', $scoreElement);\r\n\t\t\t} else\r\n\t\t\t{\r\n\t\t\t\tshowMessage('Спасибо за ваш голос!');\r\n\t\t\t}\r\n\r\n\t\t\t// Добавление статистики\r\n\r\n\t\t\t/**\r\n\t\t\t * Блок статистики\r\n\t\t\t *\r\n\t\t\t * @type {HTMLDivElement}\r\n\t\t\t */\r\n\t\t\tconst $statisticElement = document.createElement('div');\r\n\t\t\t$statisticElement.classList.add('lecture-statistics-scores-score');\r\n\t\t\t$statisticElement.setAttribute('title', score.title);\r\n\r\n\t\t\t/**\r\n\t\t\t * Иконка оценки\r\n\t\t\t *\r\n\t\t\t * @type {HTMLSpanElement}\r\n\t\t\t */\r\n\t\t\tconst $statisticIconElement = document.createElement('span');\r\n\t\t\t$statisticIconElement.classList.add('material-icons', 'lecture-statistics-scores-score-icon');\r\n\t\t\t$statisticIconElement.textContent = score.iconClass;\r\n\t\t\t$statisticElement.insertAdjacentElement('beforeend', $statisticIconElement);\r\n\r\n\t\t\t/**\r\n\t\t\t * Блок количества выбранной оценки\r\n\t\t\t *\r\n\t\t\t * @type {HTMLSpanElement}\r\n\t\t\t */\r\n\t\t\tconst $statisticProgressElement = document.createElement('span');\r\n\t\t\t$statisticProgressElement.classList.add('lecture-statistics-scores-score-progress');\r\n\r\n\t\t\t/**\r\n\t\t\t * Оценка лекции текущей итерации оценок\r\n\t\t\t *\r\n\t\t\t * @type {ScoreType}\r\n\t\t\t */\r\n\t\t\tconst lectureScore = lectureScores.find(lectureScore => lectureScore.value === score.value);\r\n\r\n\t\t\t/**\r\n\t\t\t * Процент текущей оценки от всего количества оценок\r\n\t\t\t *\r\n\t\t\t * @type {string}\r\n\t\t\t */\r\n\t\t\tlet countPercent;\r\n\r\n\t\t\t// Если оценка на текущей итерации не была поставлена для этой лекции\r\n\t\t\tif (!lectureScore)\r\n\t\t\t{\r\n\t\t\t\tcountPercent = '0';\r\n\t\t\t} else\r\n\t\t\t{\r\n\t\t\t\tcountPercent = ((lectureScore.count / countScores) * 100).toFixed(2);\r\n\t\t\t}\r\n\r\n\t\t\t$statisticProgressElement.textContent = String(lectureScore ? lectureScore.count : 0);\r\n\t\t\t// Прогресс-бар\r\n\t\t\t$statisticProgressElement.style.background = `linear-gradient(90deg, #a7e1e5 ${countPercent}%, #E5E5E5 ${countPercent}%)`;\r\n\t\t\t// Если пользователь выбрал эту оценку\r\n\t\t\tif (selectedScoreByUser != null && score.id === selectedScoreByUser.id)\r\n\t\t\t{\r\n\t\t\t\t$statisticProgressElement.style.border = '2px solid #208022';\r\n\t\t\t}\r\n\t\t\t$statisticElement.insertAdjacentElement('beforeend', $statisticProgressElement);\r\n\r\n\t\t\t// Добавление статистики на страницу\r\n\t\t\tdocument.querySelector('.lecture-statistics-scores').insertAdjacentElement('beforeend', $statisticElement);\r\n\t\t});\r\n\r\n\t\tlecturePreloader.hide();\r\n\t\treturn true;\r\n\t}\r\n})();\r\n"]}